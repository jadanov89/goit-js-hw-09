{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,WAAYF,SAASC,cAAc,uBACnCE,UAAWH,SAASC,cAAc,sBAClCG,YAAaJ,SAASC,cAAc,yBA4BtC,SAASI,EAAcC,EAAUC,GAC7B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC/BC,YAAW,KACLN,EACDI,EAAQ,C,SAACN,E,MAAUC,IAEdM,EAAO,C,SAACP,E,MAAUC,MAEnBA,MAlCXT,EAAKC,KAAKgB,iBAAiB,UAE3B,SAAuBC,GACnBA,EAAEC,iBACF,IAAIC,EAAQC,OAAOrB,EAAKI,WAAWkB,OAC/BC,EAAOF,OAAOrB,EAAKK,UAAUiB,OAC7BE,EAASH,OAAOrB,EAAKM,YAAYgB,OAErC,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAQC,IAC7BlB,EAAcC,SAAUY,GACrBM,MAAK,EAAClB,SAAEA,EAAQC,MAAEA,MACjBkB,EAAA7B,GAAS8B,OAAOC,QACd,uBAAqBrB,QAAiBC,UAG7CqB,OAAM,EAACtB,SAAEA,EAAQC,MAAEA,MAClBsB,QAAQC,MACRL,EAAA7B,GAAS8B,OAAOC,QACZ,sBAAoBrB,QAAeC,UAGvCW,GAASG","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  delayInput: document.querySelector('input[name=\"delay\"]'),\n  stepInput: document.querySelector('input[name=\"step\"]'),\n  amountInput: document.querySelector('input[name=\"amount\"]'),\n}\n\nrefs.form.addEventListener('submit', formSubmitOn);\n\nfunction formSubmitOn (e) {\n    e.preventDefault();\n    let delay = Number(refs.delayInput.value);\n    let step = Number(refs.stepInput.value);\n    let amount = Number(refs.amountInput.value);\n\n    for (let i = 1; i <= amount; i++) {\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n  })\n  .catch(({ position, delay }) => {\n    console.log();\n    Notiflix.Notify.success(\n        `❌ Rejected promise ${position} in ${delay}ms`\n        );\n  });\n    delay += step;\n    }\n}\n\nfunction createPromise(position, delay) {\n    const shouldResolve = Math.random() > 0.3;\n    return new Promise((resolve, reject) => {\n  setTimeout(() => {\n    if (shouldResolve) {\n       resolve({position, delay})\n        } else {\n            reject({position, delay})\n        }\n        }, delay);\n    });\n}"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$refs","form","document","querySelector","delayInput","stepInput","amountInput","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","e","preventDefault","delay1","Number","value","step","amount","i","then","$parcel$interopDefault","Notify","success","catch","console","log"],"version":3,"file":"03-promises.bb4cc6eb.js.map"}