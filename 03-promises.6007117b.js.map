{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,WAAYF,SAASC,cAAc,uBACnCE,UAAWH,SAASC,cAAc,sBAClCG,YAAaJ,SAASC,cAAc,yBA4BtC,SAASI,EAAcC,EAAUC,GAC7B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC/BC,YAAW,WACLN,EACDI,EAAQ,CAACN,WAAUC,UAEdM,EAAO,CAACP,WAAUC,YAEnBA,MAlCXT,EAAKC,KAAKgB,iBAAiB,UAE3B,SAAuBC,GACnBA,EAAEC,iBAKF,IAJA,IAAIC,EAAQC,OAAOrB,EAAKI,WAAWkB,OAC/BC,EAAOF,OAAOrB,EAAKK,UAAUiB,OAC7BE,EAASH,OAAOrB,EAAKM,YAAYgB,OAE5BG,EAAW,EAAGA,GAAYD,EAAQC,GAAU,EACpDlB,EAAckB,EAAUL,GACtBM,MAAK,SAAAC,G,IAAGnB,EAAQmB,EAARnB,SAAUC,EAAKkB,EAALlB,MACjBmB,EAAA9B,GAAS+B,OAAOC,QACd,uBAAwCC,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,UAGrDuB,OAAM,SAAAL,G,IAAGnB,EAAQmB,EAARnB,SAAUC,EAAKkB,EAALlB,MAClBwB,QAAQC,MACRN,EAAA9B,GAAS+B,OAAOM,QACZ,sBAAqCJ,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,UAG/CW,GAASG,K","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  delayInput: document.querySelector('input[name=\"delay\"]'),\n  stepInput: document.querySelector('input[name=\"step\"]'),\n  amountInput: document.querySelector('input[name=\"amount\"]'),\n}\n\nrefs.form.addEventListener('submit', formSubmitOn);\n\nfunction formSubmitOn (e) {\n    e.preventDefault();\n    let delay = Number(refs.delayInput.value);\n    let step = Number(refs.stepInput.value);\n    let amount = Number(refs.amountInput.value);\n\n    for (let position = 1; position <= amount; position+=1) {\n     createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n  })\n  .catch(({ position, delay }) => {\n    console.log();\n    Notiflix.Notify.failure(\n        `❌ Rejected promise ${position} in ${delay}ms`\n        );\n  });\n    delay += step;\n    }\n}\n\nfunction createPromise(position, delay) {\n    const shouldResolve = Math.random() > 0.3;\n    return new Promise((resolve, reject) => {\n  setTimeout(() => {\n    if (shouldResolve) {\n       resolve({position, delay})\n        } else {\n            reject({position, delay})\n        }\n        }, delay);\n    });\n}"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$refs","form","document","querySelector","delayInput","stepInput","amountInput","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","e","preventDefault","delay1","Number","value","step","amount","position1","then","param","$parcel$interopDefault","Notify","success","concat","catch","console","log","failure"],"version":3,"file":"03-promises.6007117b.js.map"}